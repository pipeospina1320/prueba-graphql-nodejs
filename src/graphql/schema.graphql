type Query {
  # hello: String!
  # getPerson(name: String, age: Int): String
  # getInt(age: Int!): Int
  # getFloat: Float
  # getString: String
  # getBoolean: Boolean
  # getId: ID
  # getNumbers(numbers: [Int!]!): [Int]
  # Product
  product(id: ID!): Product!
  allProducts: [Product!]!
}

type Mutation {
  login(email: String!, password: String): AuthResponse
  addProduct(dto: CreateProductDto!): Product
  updateProduct(id: ID!, dto: UpdateProductoDto!): Product
  deleteProduct(id: ID!): ID
  addCategory(dto: CreateCategoryDto!): Category
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  createdAt: String!
  categoryId: ID!
  category: Category
}

type Category {
  id: ID!
  name: String!
  image: String!
}

input CreateProductDto {
  name: String!
  price: Float!
  description: String!
  image: String!
  categoryId: ID!
}

input UpdateProductoDto {
  name: String
  price: Float
  description: String
  image: String
  categoryId: ID
}

input CreateCategoryDto {
  name: String!
  image: String!
}

type AuthResponse {
  access_token: String!
  user: User
}

type User {
  id: ID!
  email: String!
  role: String!
  createdAt: String!
}
